
  function closeNav() {
    document.getElementById("myNav").style.width = "0%";
    document.getElementById("overallbody").style.height = "0%";
    document.body.style.position = "relative";
  }

  /* Close when someone clicks on the "x" symbol inside the overlay */
 function openNav() {
    document.getElementById("myNav").style.width = "60%";
    document.getElementById("overallbody").style.height = "100%";
    document.body.style.position = "fixed";
   
  }
  

  var swiper = new Swiper('.swiper-container', {
    slidesPerView: 3,
    spaceBetween: 30,
    slidesPerGroup: 4,
    loop: false,
    loopFillGroupWithBlank: false,
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
  });

  
  
 // init controller
 let homeController = new ScrollMagic.Controller();
 const HeaderTl =gsap.timeline();
  
  HeaderTl
  .fromTo("#header_bar",
    {
  opacity:0,
  x:-200,
  ease:"back"
  },
  {
    duration:1.5,
    opacity:1,
    x:0
  }
  )
 
  const offTl =gsap.timeline();
  offTl
  .fromTo(".off-sale-text",
  {
  
  opacity:0,
  x:-200,
 
  },
  {
    opacity:1,
    x:0,
    duration:1.5,
   

  },
// ">-1.5"
  )

  const newArrivalNode =document.querySelectorAll(".New_arrival")
  console.log(newArrivalNode)
  if(newArrivalNode!=null){
    newArrivalNode.forEach((node)=>{
      let newTl =gsap.timeline();
      newTl
    .fromTo (node.querySelectorAll(".New_arrival_text"),
    {
    x:-100,
    opacity:0,
  
   
   
    },
    {
      x:0,
      opacity:1,
      duration:1.5,
    },
   
    )
    
    .fromTo(node.querySelectorAll(".New_arrival_image"),
    {
   y:135,
    opacity:0,
    },
    { 
      y:0,
      opacity:1,
      duration:1.5,
    },
   ">-1"
    )
    let newArrival = new ScrollMagic.Scene({
      triggerElement: ".off-sale-text",
      triggerHook: .20,
      reverse: true,
      offset: 100,
      duration: 0,
    })
    .setTween(newTl)
    // .addIndicators()
    .addTo(homeController);
    
    })
  }
  
  let fourCollectionsNode =document.querySelectorAll(".four_collections")
  if(fourCollectionsNode != null){
    console.log(fourCollectionsNode)
    fourCollectionsNode.forEach((node)=>{
      let fourCollectionsTL = gsap.timeline();
      fourCollectionsTL.fromTo(
       node.querySelectorAll( ".col-md-3"),
        {
          opacity: 0,
          y: 100,
        },
        {

          opacity: 1,
          y: 0,
          stagger: 0.3,
          duration: 0.4,
        },
       
      );
      let four_collections = new ScrollMagic.Scene({
        triggerElement: node,
        triggerHook: 0.20,
        reverse: true,
        offset: 10,
        duration: 0,
      })
      .setTween(fourCollectionsTL)
      //  .addIndicators()
      .addTo(homeController);
      
    })

  }

  const footerTl = gsap.timeline();
  footerTl.fromTo(
    ".footer-fade-in",
    {
      opacity: 0,
      y: 100,
    },
    {
      opacity: 1,
      y: 0,
      stagger: 0.3,
      duration: 0.4,
    }
  );




  let footerL=new ScrollMagic.Scene({
    triggerElement:"footer",
    triggerHook:1,
    reverse:true,
    offset:200,
    duration: 0
    })
    
    .setTween(footerTL)
    ////.addIndicators()
    .addTo(homeController); // assign the scene to the controller
    
